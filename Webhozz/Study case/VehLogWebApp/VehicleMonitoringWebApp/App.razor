@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using VehicleMonitoringWebApp.Components.Layout
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @* Auto-redirect to login if user is not authenticated *@
                    @if (!context.User.Identity?.IsAuthenticated ?? true)
                    {
                        Navigation.NavigateTo("/login", true); // <-- ⬅️ force redirect to login
                    }
                    else
                    {
                        <p>You're not authorized to access this resource.</p>
                    }
                </NotAuthorized>
                <Authorizing>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <p>Memuat autentikasi...</p>
                    </LayoutView>
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Halaman tidak ditemukan.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [CascadingParameter] private Task<AuthenticationState> AuthStateTask { get; set; }
}