@page "/login"
@using VehicleMonitoringWebApp.Models
@using VehicleMonitoringWebApp.Services
@using Microsoft.AspNetCore.Components.Forms

@inject AuthService AuthService
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider AuthProvider

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <img src="/css/img/odg.png" width="487" height="320" alt="Logo" class="logo-img" />
        <div id="login-form">
            <h3>Login</h3>
            <div class="mb-15">
                <InputText class="form-control" placeholder="Username" @bind-Value="loginModel.Username" />
            </div>
            <div class="mb-15">
                <InputText type="password" placeholder="Password" class="form-control" @bind-Value="loginModel.Password" />
            </div>
            <button class="btn btn-primary" type="submit">Login</button>

            @if (!string.IsNullOrEmpty(errorMessage))

            {
                <div class="alert alert-danger mt-2">@errorMessage</div>
            }
        </div>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        errorMessage = "";
        // 1) verifikasi user via service (harus mengembalikan Username + Role)
        var user = await AuthService.AuthenticateAsync(loginModel.Username, loginModel.Password);
        if (user is null)
        {
            errorMessage = "Username atau password salah.";
            return;
        }
        // 2) masukkan ke Claims (Name + Role)
        //    Role harus "Employee" atau "Driver" seperti yang kita pakai di policy
        await AuthProvider.SignInAsync(user.Username, user.Role);
        // 3) redirect sesuai role
        if (string.Equals(user.Role, "Employee", StringComparison.OrdinalIgnoreCase))
            Navigation.NavigateTo("/employee");
        else if (string.Equals(user.Role, "Driver", StringComparison.OrdinalIgnoreCase))
            Navigation.NavigateTo("/");
        else if (string.Equals(user.Role, "Admin", StringComparison.OrdinalIgnoreCase))
            Navigation.NavigateTo("/");
        else
            Navigation.NavigateTo("/access-denied", true);
    }

    public class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }
}
